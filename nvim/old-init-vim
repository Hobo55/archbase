"
"++++++++++++++++++++++++++++++++++++++++++++++++++++++
"        NEOVIM init.vim
"+++++++++++++++++++++++++++++++++++++++++++++++++++++
" A customized init.vim for neovim (https://neovim.io/)

set clipboard+=unnamedplus    " Use system clipboard
set nocompatible              " be iMproved, required
filetype off                  " required

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Vundle For Managing Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
set rtp^=/usr/share/vim/vimfiles/

call vundle#begin()		" required, all plugins must appear after this line.
" The Basics
    Plugin 'gmarik/Vundle.vim'                           " Vundle
    Plugin 'itchyny/lightline.vim'                       " Lightline statusbar
    Plugin 'itchyny/vim-gitbranch'						 " git in stusbar
    Plugin 'suan/vim-instant-markdown', {'rtp': 'after'} " Markdown Preview
"   Plugin 'frazrepo/vim-rainbow'
" File management
    Plugin 'vifm/vifm.vim'                               " Vifm
"    Plugin 'scrooloose/nerdtree'                         " Nerdtree
"    Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'     " Highlighting Nerdtree
"    Plugin 'ryanoasis/vim-devicons'                      " Icons for Nerdtree
" Productivity
    Plugin 'vimwiki/vimwiki'                             " VimWiki
"    Plugin 'jreybert/vimagit'                            " Magit-like plugin for vim
" Tim Pope Plugins
"    Plugin 'tpope/vim-surround'                          " Change surrounding marks
" Syntax Highlighting and Colors
"    Plugin 'PotatoesMaster/i3-vim-syntax'                " i3 config highlighting
"    Plugin 'kovetskiy/sxhkd-vim'                         " sxhkd highlighting
    Plugin 'vim-python/python-syntax'                    " Python highlighting
    Plugin 'ap/vim-css-color'                            " Color previews for CSS
" Junegunn Choi Plugins
"    Plugin 'junegunn/goyo.vim'                           " Distraction-free viewing
"    Plugin 'junegunn/limelight.vim'                      " Hyperfocus on a range
"    Plugin 'junegunn/vim-emoji'                          " Vim needs emojis!

call vundle#end()		" required, all plugins must appear before this line.

filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
" filetype plugin on

" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal

" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Remap Keys
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Remap ESC to ii
":imap ii <Esc>

"==========================================================
"		General settings
"==========================================================
syntax enable
syntax on
set number relativenumber


"==========================================================
"		Lightline plugin
"==========================================================

" :h g:lightline.colorscheme, to show lightline colorschemes
"	set colorscheme and add more
let g:lightline = {
      \ 'colorscheme': 'duomini',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
      \  'right': [ [ 'lineinfo' ],
      \				[ 'percent' ],
	  \				[ 'absolutepath', 'filetype', 'fileformat', 'fileencoding' ] ]
	  \ },
      \ 'component_function': {
      \   'gitbranch': 'gitbranch#name'
      \ },
	  \ 'component': {
      \ 'absolutepath': '%F'
      \ },
      \ }

set laststatus=2            " allow statusbar in vim
set t_Co=256                " set 256 colors if terminal supports it
"set termguicolors          " enable true color in vim, if available in terminal
let g:rehash256 = 1
" Uncomment to prevent non-normal modes showing in powerline and below powerline.
set noshowmode

"===========================================================
"		choose colorscheme
"==========================================================
"colorscheme darcula
"colorscheme duo-mini
"colorscheme gruvbox
"colorscheme khaki
colorscheme odyssey
"colorscheme corvine
"colorscheme substrata
"colorscheme beelzebub

"-------------------------- google 2 lines
"set rtp+=~/.vim/colors/
"colorscheme odyssey
"--------------------------

"==========================================================
" Cursor line   **set after colorschemes, or they get overwritten
set cursorline
set cursorcolumn
"highlight CursorLine cterm=bold guibg=#2b2b2b
"highlight CursorColumn cterm=bold guibg=#2b2b2b

"==========================================================
"		Editor- Tabs, indents
"==========================================================
set expandtab            " Use spaces instead of tabs
set tabstop=4            " 4 spcs/yab
set shiftwidth=4         " 1 tab == 4 spaces
set smarttab             " Be smart when using tabs
set cursorline                         " shows line under the cursor's line
set showmatch                          " shows matching part of bracket pairs (), [], {}
"set spell                             " spell chker
autocmd BufWritePre * %s/\s\+$//e      " Remove trailing whitespace on save
set nobackup                           " backups del after file saved
"set noswapfile                         " not recommended

"------		Search settings	-------
set incsearch	                            " incremental search
set hlsearch	                            " highlight search results
set path+=**					" Searches current directory recursively.
set wildmode=longest,list,full  " completion
"set wildmenu					" Display all matches when tab complete.

"--------  split windows/navigate ----
set splitbelow splitright   " open splits right or below current window
set fillchars+=vert:\       " Removes pipes | that act as seperators on splits

nnoremap <C-J> <C-W><C-J>   "goto tab down
nnoremap <C-K> <C-W><C-K>   "         up
nnoremap <C-L> <C-W><C-L>   "         right
nnoremap <C-H> <C-W><C-H>   "         left

"----  Tabs (windows) / Buffers settings ----
"tab sball               " open 1 window / buffer
"set switchbuf=useopen
"nmap <F9> :bprev<CR>
"nmap <F10> :bnext<CR>
"nmap <silent> <leader>q :SyntasticCheck # <CR> :bp <BAR> bd #<CR>

"=========================================
" => VimWiki
"========================================
let g:vimwiki_list = [{'path': '~/vimwiki/', \
'syntax': 'markdown', 'ext': '.md'}]

"=============================================
"        NERDTree
"============================================
" Uncomment to autostart the NERDTree
" autocmd vimenter * NERDTree
"map <C-n> :NERDTreeToggle<CR>
"let g:NERDTreeDirArrowExpandable = '►'
"let g:NERDTreeDirArrowCollapsible = '▼'
"let NERDTreeShowLineNumbers=1
"let NERD=1
"let NERDTreeMinimalUI = 1
"let g:NERDTreeWinSize=38

"======================================
"       Vifm
"======================================
map <Leader>vv :Vifm<CR>
map <Leader>vs :VsplitVifm<CR>
map <Leader>sp :SplitVifm<CR>
map <Leader>dv :DiffVifm<CR>
map <Leader>tv :TabVifm<CR>

"=====================================
"    Vim-Instant-Markdown
"====================================
"let g:instant_markdown_autostart = 0        " Turns off auto preview
let g:instant_markdown_browser = "firefox"   " Uses browser for preview
map <Leader>md :InstantMarkdownPreview<CR>   " Previews .md file
map <Leader>ms :InstantMarkdownStop<CR>      " Kills the preview

"====================================
"    Open terminal inside Vim
"===================================
"map <Leader>tt :vnew term://bash<CR>

"==================================
"    Mouse Scrolling
"==================================
set mouse=nicr     " scrolling
set mouse=a        " allow pasting
"set clipboard=unnamedplus  "copy/paste between vim and others"
let g:python_highlight_all = 1

"au! BufRead,BufWrite,BufWritePost,BufNewFile *.org
"au BufEnter *.org            call org#SetOrgFileType()

"set guioptions-=m  "remove menu bar
"set guioptions-=T  "remove toolbar
"set guioptions-=r  "remove right-hand scroll bar
"set guioptions-=L  "remove left-hand scroll bar
