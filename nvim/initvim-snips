

" nvim snippets: saved for later use- some not installed

"==========================================================
"nnoremap <C-J> <C-W><C-J>   "goto tab down
"nnoremap <C-K> <C-W><C-K>   "         up
"nnoremap <C-L> <C-W><C-L>   "         right
"nnoremap <C-H> <C-W><C-H>   "         left

"----  Tabs (windows) / Buffers settings ----
"tab sball               " open 1 window / buffer
"set switchbuf=useopen
"nmap <F9> :bprev<CR>
"nmap <F10> :bnext<CR>
"nmap <silent> <leader>q :SyntasticCheck # <CR> :bp <BAR> bd #<CR>

"======================================
"       Vifm
"======================================
"map <Leader>vv :Vifm<CR>
"map <Leader>vs :VsplitVifm<CR>
"map <Leader>sp :SplitVifm<CR>
"map <Leader>dv :DiffVifm<CR>
"map <Leader>tv :TabVifm<CR>

"=============================================
"        NERDTree 
"============================================
" Uncomment to autostart the NERDTree
" autocmd vimenter * NERDTree
"map <C-n> :NERDTreeToggle<CR>
"let g:NERDTreeDirArrowExpandable = '►'
"let g:NERDTreeDirArrowCollapsible = '▼'
"let NERDTreeShowLineNumbers=1
"let NERD=1
"let NERDTreeMinimalUI = 1
"let g:NERDTreeWinSize=38

"   Do not know these- checkout commands
"au! BufRead,BufWrite,BufWritePost,BufNewFile *.org
"au BufEnter *.org            call org#SetOrgFileType()

"set guioptions-=m  "remove menu bar
"set guioptions-=T  "remove toolbar
"set guioptions-=r  "remove right-hand scroll bar
"set guioptions-=L  "remove left-hand scroll bar

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Remap Keys
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"Remap ESC to ii
":imap ii <Esc>
"==========================================================
"====================================
"    Open terminal inside Vim
"===================================
map <Leader>tt :vnew term://bash<CR>

"==========================================================
"		Lightline plugin
"==========================================================
" :h g:lightline.colorscheme, to show lightline colorschemes
"	set colorscheme and add more
let g:lightline = {
      \ 'colorscheme': 'grvbx',
      \ 'active': {
      \   'left': [ [ 'mode', 'paste' ],
      \             [ 'gitbranch', 'readonly', 'filename', 'modified' ] ],
      \  'right': [ [ 'lineinfo' ],
      \				[ 'percent' ],
	  \				[ 'absolutepath', 'filetype', 'fileformat', 'fileencoding' ] ]
	  \ },
      \ 'component_function': {
      \   'gitbranch': 'gitbranch#name'
      \ },
	  \ 'component': {
      \ 'absolutepath': '%F'
      \ },
      \ }


"======================================
"        STATUS LINE
"======================================
" to see color highlighting for statusline source:
" :so $VIMRUNTIME/syntax/hitest.vim

"---------------------------
" funcion to show git branch:

function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction
function! StatuslineGit()
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?'  '.l:branchname.' ':''
endfunction
"--------------------------

" function to show current mode:
let g:currentmode={
       \ 'n'  : 'NORMAL ',
       \ 'v'  : 'VISUAL ',
       \ 'V'  : 'V·Line ',
       \ '' : 'V·Block ',
       \ 'i'  : 'INSERT ',
       \ 'R'  : 'R ',
       \ 'Rv' : 'V·Replace ',
       \ 'c'  : 'Command ',
       \}

set statusline=                "LEFT SIDE
set statusline+=%#DiffChange#
set statusline+=%{StatuslineGit()}
set statusline+=%#Exception#
set statusline+=\ %{toupper(g:currentmode[mode()])}
set statusline+=\ %F
set statusline+=\ %y
set statusline+=\ %m
set statusline+=%=             "RIGHT SIDE
set statusline+=%#CursorColumn#
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\ [%{&fileformat}\]
"set statusline+=\ %p%%
set statusline+=\ %l/%L
set statusline+=
set statusline+=\ %c
set statusline+=
set statusline+=%#Title#
set statusline+=\ (%n)
